xlab = "Age (years)", ylab = "Gambled in last 12 months ($)")
abline(lm(Gambled ~ Age, data = AMOD5210.noOutliers), col = "red")
AMOD5210
library(psych)
library(rstatix)
describe(AMOD5210, fast = TRUE)#fast argument to get just a short list of descriptive statistics.
identify_outliers(AMOD5210, Age)
identify_outliers(AMOD5210, Gambled)
AMOD5210.noOutliers <- AMOD5210[!(AMOD5210$ID %in% c(3402,521,539,2792,3189,1083,64)),]
shapiro_test(AMOD5210.noOutliers, vars = c("Age", "Gambled"))
plot(AMOD5210.noOutliers$Age, AMOD5210.noOutliers$Gambled, main = "Relationship between Age and Gambled",
xlab = "Age (years)", ylab = "Gambled in last 12 months ($)")
abline(lm(Gambled ~ Age, data = AMOD5210.noOutliers), col = "red")
cor.test(AMOD5210.noOutliers$Age, AMOD5210.noOutliers$Gambled, method = "spearman")
library(readxl)
ass3data <- read_excel("ass3data.xlsx")
set.seed(0765968) #Generating random sample with my student ID
index <- sample(1:nrow(ass3data),200)#Creating random sample of 200 records
AMOD5210 <- ass3data[index, ]
head(AMOD5210,n=5)
AMOD5210
library(psych)
library(rstatix)
describe(AMOD5210, fast = TRUE)#fast argument to get just a short list of descriptive statistics.
identify_outliers(AMOD5210, AG)
identify_outliers(AMOD5210, AG)
AMOD5210.noOutliers <- AMOD5210[!(AMOD5210$ID %in% c(3592,2218,1188,3779,3245,2807,216)),]
AMOD5210.noOutliers <- AMOD5210[!(AMOD5210$ID %in% c(3592,2218,1188,3779,3245,2807,216)),]
AMOD5210.noOutliers <- AMOD5210[!(AMOD5210$ID %in% c(3592,2218,1188,3779,3245,2807,216)),]
identify_outliers(AMOD5210.noOutliers, LTW)
identify_outliers(AMOD5210.noOutliers, LTW)
AMOD5210.noOutliers <- AMOD5210.noOutliers[!(AMOD5210.noOutliers$ID %in% c(3002,1556,813,167,
220,2033,1982,1226,
1328,1079,804,2418,1007
,1386,2086,539,2792,1723,2814,
2942,729,3866,1125,2232,
1083,64,365,2391,3315,1781,
431,3595,765,2197,969,
1129,3898,)),]
AMOD5210.noOutliers <- AMOD5210.noOutliers[!(AMOD5210.noOutliers$ID %in% c(3002,1556,813,167,
220,2033,1982,1226,
1328,1079,804,2418,1007
,1386,2086,539,2792,1723,2814,
2942,729,3866,1125,2232,
1083,64,365,2391,3315,1781,
431,3595,765,2197,969,
1129,3898)),]
AMOD5210.noOutliers <- AMOD5210.noOutliers[!(AMOD5210.noOutliers$ID %in% c(3002,1556,813,167,
220,2033,1982,1226,
1328,1079,804,2418,1007
,1386,2086,539,2792,1723,2814,
2942,729,3866,1125,2232,
1083,64,365,2391,3315,1781,
431,3595,765,2197,969,
1129,3898)),]
AMOD5210.noOutliers <- AMOD5210.noOutliers[!(AMOD5210.noOutliers$ID %in% c(3002,1556,813,167,
220,2033,1982,1226,
1328,1079,804,2418,1007
,1386,2086,539,2792,1723,2814,
2942,729,3866,1125,2232,
1083,64,365,2391,3315,1781,
431,3595,765,2197,969,
1129,3898)),]
shapiro_test(AMOD5210.noOutliers, vars = c("AG", "LTW"))
plot(AMOD5210.noOutliers$AG, AMOD5210.noOutliers$LTW, main = "Relationship between AG and LTW",
xlab = "Age (years)", ylab = "Estimated lifetime winnings from gambling ($)")
abline(lm(LTW ~ AG, data = AMOD5210.noOutliers), col = "red")
cor.test(AMOD5210.noOutliers$AG, AMOD5210.noOutliers$LTW, method = "spearman")
library(readxl)
ass3data <- read_excel("ass3data.xlsx")
set.seed(0765968) #Generating random sample with my student ID
index <- sample(1:nrow(ass3data),200)#Creating random sample of 200 records
AMOD5210 <- ass3data[index, ]
head(AMOD5210,n=5)
AMOD5210
library(psych)
library(rstatix)
describe(AMOD5210, fast = TRUE)#fast argument to get just a short list of descriptive statistics.
identify_outliers(AMOD5210, Age)
identify_outliers(AMOD5210, LTW)
AMOD5210.noOutliers <- AMOD5210[!(AMOD5210$ID %in% c(3002, 1556, 813,167,220,
2033,1982,1226,2218,1328,1079,
804,2418,1007,1386,2086,539,
2792,1723,2814,2942,729,
3866,1125,2232,1083,64,365,
2391,3315,1781,431,3595,765,2197,
969,1129,216,3898)),]
shapiro_test(AMOD5210.noOutliers, vars = c("Age", "LTW"))
plot(AMOD5210.noOutliers$Age, AMOD5210.noOutliers$LTW, main = "Relationship between Age and Lifetime Winning",
xlab = "Age (years)", ylab = "Lifetime Winning ($)")
abline(lm(LTW ~ Age, data = AMOD5210.noOutliers), col = "red")
cor.test(AMOD5210.noOutliers$Age, AMOD5210.noOutliers$LTW, method = "spearman")
lm(AMOD5210.noOutliers ~ AMOD5210.noOutliers$LTW,data = AMOD5210.noOutliers)
mod <- lm(AMOD5210.noOutliers$LTW ~ AMOD5210.noOutliers$Age)
cf <- coef(mod)
mod <- lm(AMOD5210.noOutliers$LTW ~ AMOD5210.noOutliers$Age)
cf <- coef(mod)
cf
mod <- lm(AMOD5210.noOutliers$LTW ~ AMOD5210.noOutliers$Age)
cf <- coef(mod)
Intercept <- cf[1]
Slope <- cf[2]
mod <- lm(AMOD5210.noOutliers$LTW ~ AMOD5210.noOutliers$Age)
cf <- coef(mod)
Intercept <- cf[1]
Slope <- cf[2]
Intercept
Slope
AMOD5210
library(psych)
library(rstatix)
describe(AMOD5210, fast = TRUE)#fast argument to get just a short list of descriptive statistics.
identify_outliers(AMOD5210, Age)
identify_outliers(AMOD5210, LTW)
AMOD5210.noOutliers <- AMOD5210[!(AMOD5210$ID %in% c(3002, 1556, 813,167,220,
2033,1982,1226,2218,1328,1079,
804,2418,1007,1386,2086,539,
2792,1723,2814,2942,729,
3866,1125,2232,1083,64,365,
2391,3315,1781,431,3595,765,2197,
969,1129,216,3898)),]
shapiro_test(AMOD5210.noOutliers, vars = c("Age", "LTW"))
plot(AMOD5210.noOutliers$Age, AMOD5210.noOutliers$LTW, main = "Relationship between Age and Lifetime Winning",
xlab = "Age (years)", ylab = "Lifetime Winning ($)")
abline(lm(LTW ~ Age, data = AMOD5210.noOutliers), col = "red")
cor.test(AMOD5210.noOutliers$Age, AMOD5210.noOutliers$LTW, method = "spearman")
mod <- lm(AMOD5210.noOutliers$LTW ~ AMOD5210.noOutliers$Age)
cf <- coef(mod)
Intercept <- cf[1]
Slope <- cf[2]
Intercept
Slope
mod <- lm(AMOD5210.noOutliers$LTW ~ AMOD5210.noOutliers$Age)
cf <- coef(mod)
Intercept <- cf[1]
Slope <- cf[2]
Intercept
Slope
library(readxl)
ass3data <- read_excel("ass3data.xlsx")
set.seed(0765968) #Generating random sample with my student ID
index <- sample(1:nrow(ass3data),200)#Creating random sample of 200 records
AMOD5210 <- ass3data[index, ]
head(AMOD5210,n=5)
library(readxl)
ass3data <- read_excel("ass3data.xlsx")
set.seed(0765968) #Generating random sample with my student ID
index <- sample(1:nrow(ass3data),200)#Creating random sample of 200 records
AMOD5210 <- ass3data[index, ]
head(AMOD5210,n=5)
AMOD5210
library(psych)
library(rstatix)
describe(AMOD5210, fast = TRUE)#fast argument to get just a short list of descriptive statistics.
identify_outliers(AMOD5210, AG)
AMOD5210.noOutliers <- AMOD5210[!(AMOD5210$ID %in% c(3592,2218,1188,3779,3245,2807,216)),]
identify_outliers(AMOD5210.noOutliers, LTW)
AMOD5210.noOutliers <- AMOD5210.noOutliers[!(AMOD5210.noOutliers$ID %in% c(3002,1556,813,167,
220,2033,1982,1226,
1328,1079,804,2418,1007
,1386,2086,539,2792,1723,2814,
2942,729,3866,1125,2232,
1083,64,365,2391,3315,1781,
431,3595,765,2197,969,
1129,3898)),]
shapiro_test(AMOD5210.noOutliers, vars = c("AG", "LTW"))
plot(AMOD5210.noOutliers$AG, AMOD5210.noOutliers$LTW, main = "Relationship between AG and LTW",
xlab = "Age (years)", ylab = "Estimated lifetime winnings from gambling ($)")
abline(lm(LTW ~ AG, data = AMOD5210.noOutliers), col = "red")
cor.test(AMOD5210.noOutliers$AG, AMOD5210.noOutliers$LTW, method = "spearman")
mod <- lm(AMOD5210.noOutliers$LTW ~ AMOD5210.noOutliers$AG)
cf <- coef(mod)
Intercept <- cf[1]
Slope <- cf[2]
Intercept
Slope
mod <- lm(AMOD5210.noOutliers$AG ~ AMOD5210.noOutliers$LTW)
cf <- coef(mod)
Intercept <- cf[1]
Slope <- cf[2]
Intercept
Slope
mod <- lm(AMOD5210.noOutliers$LTW ~ AMOD5210.noOutliers$AG)
cf <- coef(mod)
Intercept <- cf[1]
Slope <- cf[2]
Intercept
Slope
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(readxl)
ass3data <- read_excel("ass3data.xlsx")
set.seed(0765968) #Generating random sample with my student ID
index <- sample(1:nrow(ass3data),200)#Creating random sample of 200 records
AMOD5210 <- ass3data[index, ]
head(AMOD5210,n=5)
AMOD5210
library(datarium)
install.packages(datarium)
library(datarium)
install.packages("datarium")
library(datarium)
library(rstatix)
job.grouping <- group_by(AMOD5210$Income, AMOD5210$MS)
job.grouping <- group_by(AMOD5210, MS)
get_summary_stats(job.grouping, Income, type = "mean_sd")
marital.grouping <- group_by(AMOD5210, MS)
get_summary_stats(marital.grouping, Income, type = "mean_sd")
identify_outliers(marital.grouping, Income)
shapiro_test(marital.grouping, Income)
shapiro_test(marital.grouping, Income)
levene_test(marital.grouping, Income ~ MS)
levene_test(marital.grouping, Income ~ marital.grouping$MS)
levene_test(marital.grouping, Income ~MS)
levene_test(marital.grouping, Income ~ MS)
# Group the data by marital status
marital.grouping <- group_by(AMOD5210, MS)
# Perform Levene's test on Income across marital status groups
levene_test(marital.grouping, Income ~ MS
# Group the data by marital status
marital.grouping <- group_by(AMOD5210, MS)
# Perform Levene's test on Income across marital status groups
levene_test(marital.grouping, Income ~ MS)
names(marital.grouping)
library(readxl)
ass3data <- read_excel("ass3data.xlsx")
set.seed(0765968) #Generating random sample with my student ID
index <- sample(1:nrow(ass3data),200)#Creating random sample of 200 records
AMOD5210 <- ass3data[index, ]
head(AMOD5210,n=5)
AMOD5210
names(marital.grouping)
names(marital.grouping)
subset_data <- marital.grouping[, c("Income", "MS")])
subset_data <- marital.grouping[, c("Income", "MS")]
subset_data <- marital.grouping[, c("Income", "MS")]
sum(is.na(subset_data$MS))
levene_test(subset_data, Income ~ MS)
AMOD5210
library(datarium)
library(rstatix)
marital.grouping <- group_by(AMOD5210, MS)
get_summary_stats(marital.grouping, Income, type = "mean_sd")
identify_outliers(marital.grouping, Income)
shapiro_test(marital.grouping, Income)
levene_test(marital.grouping, Income ~ MS)
levene_test(AMOD5210, Income ~ MS)
levene_test(AMOD5210, Income ~ MS)
levene_test(AMOD5210, Income ~ MS)
Ind.ANOVA <- aov(Income ~ MS, AMOD5210)
Anova(Ind.ANOVA, type = "III")
Ind.ANOVA <- aov(Income ~ MS, AMOD5210)
Anova(Ind.ANOVA, type = "III")
t_test(AMOD5210, Income ~ MS, var.equal = TRUE,
p.adjust.method = "bonferroni")
lap_times <- read.csv("C:/Users/Aru/Desktop/Assignment Term 1 Trent/Data Analytics with R/Assignment 1/Data/lap_times.csv")
View(lap_times)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
time_sec <- unlist(lapply(strsplit(lap_times$time, split = ":", fixed = TRUE)
, function(xx){ as.numeric(xx[1])*60 + as.numeric(xx[2]) }))
lap_times$time_sec <- time_sec
qplot(x=lap, y=time, data = lap_times[513654:513711,],
geom = "line",group = lap[513654:513711],color="steelblue") +
geom_line(data = lap_times[513596:513653,],
aes(x=lap, y=time,group = lap[513596:513653]),
color="darkred")+  scale_x_continuous(limits = c(2, 58),
breaks = seq(2, 58, by = 7))
lap_times$driverId_fac <- as.factor(lap_times$driverId)
lap_times_subset <- subset(lap_times, raceId == 1073 & (driverId == 1 | driverId == 830))
ggplot(lap_times_subset, aes(x = lap, y = time_sec, colour = driverId_fac)) +
geom_line() +
scale_colour_manual(values = c("steelblue", "darkred")
, name = "Driver", breaks = c("1", "830")
, labels = c("Lewis Hamilton", "Max Verstappen")) +
labs(y = "Lap Time (sec)", x = "Lap") + theme(legend.position = "top")
lap_times$driverId_fac <- as.factor(lap_times$driverId)
lap_times_subset <- subset(lap_times, raceId == 1073 & (driverId == 1 | driverId == 830))
ggplot(lap_times_subset, aes(x = lap, y = time_sec, colour = driverId_fac)) +
geom_line() +
scale_colour_manual(values = c("steelblue", "darkred")
, name = "Driver", breaks = c("1", "830")
, labels = c("Lewis Hamilton", "Max Verstappen")) +
labs(y = "Lap Time (sec)", x = "Lap") + theme(legend.position = "top")
library(ggplot2)
time_sec <- unlist(lapply(strsplit(lap_times$time, split = ":", fixed = TRUE)
, function(xx){ as.numeric(xx[1])*60 + as.numeric(xx[2]) }))
lap_times$time_sec <- time_sec
lap_times$driverId_fac <- as.factor(lap_times$driverId)
lap_times_subset <- subset(lap_times, raceId == 1073 & (driverId == 1 | driverId == 830))
ggplot(lap_times_subset, aes(x = lap, y = time_sec, colour = driverId_fac)) +
geom_line() +
scale_colour_manual(values = c("steelblue", "darkred")
, name = "Driver", breaks = c("1", "830")
, labels = c("Lewis Hamilton", "Max Verstappen")) +
labs(y = "Lap Time (sec)", x = "Lap") + theme(legend.position = "top")
library(ggplot2)
time_sec <- unlist(lapply(strsplit(lap_times$time, split = ":", fixed = TRUE)
, function(xx){ as.numeric(xx[1])*60 + as.numeric(xx[2]) }))
lap_times$time_sec <- time_sec
lap_times$driverId_fac <- as.factor(lap_times$driverId)
lap_times_subset <- subset(lap_times, raceId == 1073 & (driverId == 1 | driverId == 830))
ggplot(lap_times_subset, aes(x = lap, y = time_sec, colour = driverId_fac)) +
geom_line() +
scale_colour_manual(values = c("steelblue", "darkred")
, name = "Driver", breaks = c("1", "830")
, labels = c("Lewis Hamilton", "Max Verstappen")) +
labs(y = "Lap Time (sec)", x = "Lap") + theme(legend.position = "top")
ham_ad_2021_lap58 <- read.csv("C:/Users/Aru/Desktop/Assignment Term 1 Trent/Data Analytics with R/Assignment 1/ver-ad2022/ham_ad_2021_lap58.csv")
View(ham_ad_2021_lap58)
ver_ad_2021_lap58 <- read.csv("C:/Users/Aru/Desktop/Assignment Term 1 Trent/Data Analytics with R/Assignment 1/ver-ad2022/ver_ad_2021_lap58.csv")
View(ver_ad_2021_lap58)
library(gridExtra)
library(ggplot2)
p5 <- ggplot(data = ver_ad_2021_lap58, aes(x = Distance, y = Speed, color = "Max Verstappen Lap 58")) +
geom_line() +
geom_line(data = ham_ad_2021_lap58, aes(x = Distance, y = Speed, color = "Lewis Hamilton Lap 58")) +
labs(y = "Speed (in kmph)", x = "Distance(in meters)") +
scale_color_manual(values = c("darkred", "steelblue"),
name = "Max Verstappen Vs Lewis Hamilton",
breaks = c("Max Verstappen Lap 58", "Lewis Hamilton Lap 58"),
labels = c("Lap 58", "Lap 58"))
p6 <- ggplot(data = ver_ad_2021_lap58, aes(x = Distance, y = Throttle, color = "Max Verstappen Lap 58")) +
geom_line() +
geom_line(data = ham_ad_2021_lap58, aes(x = Distance, y = Throttle, color = "Lewis Hamilton Lap 58")) +
labs(y = "Throttle(%)", x = "Distance(in meters)") +
scale_color_manual(values = c("darkred", "steelblue"),
name = "Max Verstappen vs Lewis Hamilton",
breaks = c("Max Verstappen Lap 58", "Lewis Hamilton Lap 58"),
labels = c("Lap 58", "Lap 58")) +
guides(color = guide_legend(override.aes = list(title = "Max Verstappen vs Lewis Hamilton")))
p8 <- ggplot(data = ver_ad_2021_lap58, aes(x = Distance, y = Brake, color = "Max Verstappen Lap 58")) +
geom_line() +
geom_line(data = ham_ad_2021_lap58, aes(x = Distance, y = Brake, color = "Lewis Hamilton Lap 58")) +
labs(y = "Brake", x = "Distance(in meters)") +
scale_color_manual(values = c("darkred", "steelblue"),
name = "Max Verstappen vs Lewis Hamilton",
breaks = c("Max Verstappen Lap 58", "Lewis Hamilton Lap 58"),
labels = c("Lap 58", "Lap 58")) +
guides(color = guide_legend(override.aes = list(title = "Max Verstappen vs Lewis Hamilton")))
grid.arrange(p5, p6, p8, ncol = 1, nrow = 4)
lap_times<- read.csv(file="\Users\Aru\Desktop\Assignment Term 1 Trent\Data Analytics with R",
lap_times<- read.csv(file="/Users/Aru/Desktop/Assignment Term 1 Trent/Data Analytics with R",
header=FALSE,stringsAsFactors=TRUE)
lap_times<- read.csv(file="/Users/Aru/Desktop/Assignment Term 1 Trent/Data Analytics with R")
library(readxl)
lap_times<- read.csv(file="/Users/Aru/Desktop/Assignment Term 1 Trent/Data Analytics with R")
lap_times<- read.csv(file="/Users/Aru/Desktop/Assignment Term 1 Trent/Data Analytics with R/lap_times.csv")
library(readxl)
lap_times<- read.csv(file="/Users/Aru/Desktop/Assignment Term 1 Trent/Data Analytics with R/lap_times.csv")
library(readxl)
lap_times <- read_excel("lap_times")
lap_times<- read.csv("lap_times.csv")
ver_ad_2021_lap44 <- read.csv("ham_data_lap_2021_ad_44.csv")
ham_ad_2021_lap44 <- read.csv("ver_data_lap_2021_ad_44.csv")
setwd("C:/Users/Aru/Desktop/Assignment Term 1 Trent/Data Analytics with R/Term project")
ver_ad_2021_lap44 <- read.csv("ham_data_lap_2021_ad_44.csv")
ham_ad_2021_lap44 <- read.csv("ver_data_lap_2021_ad_44.csv")
library(gridExtra)
library(ggplot2)
p1 <- ggplot(data = ver_ad_2021_lap, aes(x = Distance, y = Speed, color = "Max Verstappen Lap 44")) +
geom_line() +
geom_line(data = ham_ad_2021_lap44, aes(x = Distance, y = Speed, color = "Lewis Hamilton Lap 44")) +
labs(y = "Speed(km/h)", x = "Distance(in meters)") +
scale_color_manual(values = c("darkred", "steelblue"),
name = "Max Verstappen Vs Lewis Hamilton",
breaks = c("Max Verstappen Lap 44", "Lewis Hamilton Lap 44"),
labels = c("Lap 44", "Lap 44"))
p2 <- ggplot(data = ver_ad_2021_lap44, aes(x = Distance, y = Throttle, color = "Max Verstappen Lap 44")) +
geom_line() +
geom_line(data = ham_ad_2021_lap44, aes(x = Distance, y = Throttle, color = "Lewis Hamilton Lap 44")) +
labs(y = "Throttle(%)", x = "Distance(in meters)") +
scale_color_manual(values = c("darkred", "steelblue"),
name = "Max Verstappen vs Lewis Hamilton",
breaks = c("Max Verstappen Lap 44", "Lewis Hamilton Lap 44"),
labels = c("Lap 44", "Lap 44")) +
guides(color = guide_legend(override.aes = list(title = "Max Verstappen vs Lewis Hamilton")))
p3 <- ggplot(data = ver_ad_2021_lap44, aes(x = Distance, y = Brake, color = "Max Verstappen Lap 44")) +
geom_line() +
geom_line(data = ham_ad_2021_lap44, aes(x = Distance, y = Brake, color = "Lewis Hamilton Lap 44")) +
labs(y = "Brake", x = "Distance(in meters)") +
scale_color_manual(values = c("darkred", "steelblue"),
name = "Max Verstappen vs Lewis Hamilton",
breaks = c("Max Verstappen Lap 44", "Lewis Hamilton Lap 44"),
labels = c("Lap 44", "Lap 44")) +
guides(color = guide_legend(override.aes = list(title = "Max Verstappen vs Lewis Hamilton")))
p4 <- ggplot(data = ver_ad_2021_lap44, aes(x = Distance, y = nGear, color = "Max Verstappen Lap 44")) +
geom_line() +
geom_line(data = ham_ad_2021_lap44, aes(x = Distance, y = nGear, color = "Lewis Hamilton Lap 44")) +
labs(y = "Gear Number", x = "Distance(in meters)") +
scale_color_manual(values = c("darkred", "steelblue"),
name = "Max Verstappen vs Lewis Hamilton",
breaks = c("Max Verstappen Lap 44", "Lewis Hamilton Lap 44"),
labels = c("Lap 44", "Lap 44")) +
guides(color = guide_legend(override.aes = list(title = "Max Verstappen vs Lewis Hamilton")))
p5 <- ggplot(data = ver_ad_2021_lap44, aes(x = Distance, y = RPM, color = "Max Verstappen Lap 44")) +
geom_line() +
geom_line(data = ham_ad_2021_lap44, aes(x = Distance, y = RPM, color = "Lewis Hamilton Lap 44")) +
labs(y = "RPM", x = "Distance(in meters)") +
scale_color_manual(values = c("darkred", "steelblue"),
name = "Max Verstappen vs Lewis Hamilton",
breaks = c("Max Verstappen Lap 44", "Lewis Hamilton Lap 44"),
labels = c("Lap 44", "Lap 44")) +
guides(color = guide_legend(override.aes = list(title = "Max Verstappen vs Lewis Hamilton")))
grid.arrange(p1, p2, p3, p4, p5 ,ncol = 1, nrow = 5)
p1 <- ggplot(data = ver_ad_2021_lap, aes(x = Distance, y = Speed, color = "Max Verstappen Lap 44")) +
geom_line() +
geom_line(data = ham_ad_2021_lap44, aes(x = Distance, y = Speed, color = "Lewis Hamilton Lap 44")) +
labs(y = "Speed(km/h)", x = "Distance(in meters)") +
scale_color_manual(values = c("darkred", "steelblue"),
name = "Max Verstappen Vs Lewis Hamilton",
breaks = c("Max Verstappen Lap 44", "Lewis Hamilton Lap 44"),
labels = c("Lap 44", "Lap 44"))
p1 <- ggplot(data = ver_ad_2021_lap44, aes(x = Distance, y = Speed, color = "Max Verstappen Lap 44")) +
geom_line() +
geom_line(data = ham_ad_2021_lap44, aes(x = Distance, y = Speed, color = "Lewis Hamilton Lap 44")) +
labs(y = "Speed(km/h)", x = "Distance(in meters)") +
scale_color_manual(values = c("darkred", "steelblue"),
name = "Max Verstappen Vs Lewis Hamilton",
breaks = c("Max Verstappen Lap 44", "Lewis Hamilton Lap 44"),
labels = c("Lap 44", "Lap 44"))
p1 <- ggplot(data = ver_ad_2021_lap44, aes(x = Distance, y = Speed, color = "Max Verstappen Lap 44")) +
geom_line() +
geom_line(data = ham_ad_2021_lap44, aes(x = Distance, y = Speed, color = "Lewis Hamilton Lap 44")) +
labs(y = "Speed(km/h)", x = "Distance(in meters)") +
scale_color_manual(values = c("darkred", "steelblue"),
name = "Max Verstappen Vs Lewis Hamilton",
breaks = c("Max Verstappen Lap 44", "Lewis Hamilton Lap 44"),
labels = c("Lap 44", "Lap 44"))
p2 <- ggplot(data = ver_ad_2021_lap44, aes(x = Distance, y = Throttle, color = "Max Verstappen Lap 44")) +
geom_line() +
geom_line(data = ham_ad_2021_lap44, aes(x = Distance, y = Throttle, color = "Lewis Hamilton Lap 44")) +
labs(y = "Throttle(%)", x = "Distance(in meters)") +
scale_color_manual(values = c("darkred", "steelblue"),
name = "Max Verstappen vs Lewis Hamilton",
breaks = c("Max Verstappen Lap 44", "Lewis Hamilton Lap 44"),
labels = c("Lap 44", "Lap 44")) +
guides(color = guide_legend(override.aes = list(title = "Max Verstappen vs Lewis Hamilton")))
p3 <- ggplot(data = ver_ad_2021_lap44, aes(x = Distance, y = Brake, color = "Max Verstappen Lap 44")) +
geom_line() +
geom_line(data = ham_ad_2021_lap44, aes(x = Distance, y = Brake, color = "Lewis Hamilton Lap 44")) +
labs(y = "Brake", x = "Distance(in meters)") +
scale_color_manual(values = c("darkred", "steelblue"),
name = "Max Verstappen vs Lewis Hamilton",
breaks = c("Max Verstappen Lap 44", "Lewis Hamilton Lap 44"),
labels = c("Lap 44", "Lap 44")) +
guides(color = guide_legend(override.aes = list(title = "Max Verstappen vs Lewis Hamilton")))
p4 <- ggplot(data = ver_ad_2021_lap44, aes(x = Distance, y = nGear, color = "Max Verstappen Lap 44")) +
geom_line() +
geom_line(data = ham_ad_2021_lap44, aes(x = Distance, y = nGear, color = "Lewis Hamilton Lap 44")) +
labs(y = "Gear Number", x = "Distance(in meters)") +
scale_color_manual(values = c("darkred", "steelblue"),
name = "Max Verstappen vs Lewis Hamilton",
breaks = c("Max Verstappen Lap 44", "Lewis Hamilton Lap 44"),
labels = c("Lap 44", "Lap 44")) +
guides(color = guide_legend(override.aes = list(title = "Max Verstappen vs Lewis Hamilton")))
p5 <- ggplot(data = ver_ad_2021_lap44, aes(x = Distance, y = RPM, color = "Max Verstappen Lap 44")) +
geom_line() +
geom_line(data = ham_ad_2021_lap44, aes(x = Distance, y = RPM, color = "Lewis Hamilton Lap 44")) +
labs(y = "RPM", x = "Distance(in meters)") +
scale_color_manual(values = c("darkred", "steelblue"),
name = "Max Verstappen vs Lewis Hamilton",
breaks = c("Max Verstappen Lap 44", "Lewis Hamilton Lap 44"),
labels = c("Lap 44", "Lap 44")) +
guides(color = guide_legend(override.aes = list(title = "Max Verstappen vs Lewis Hamilton")))
grid.arrange(p1, p2, p3, p4, p5 ,ncol = 1, nrow = 5)
ver_ad_2021_lap44 <- read.csv("ham_data_lap_2021_ad_44.csv")
ham_ad_2021_lap44 <- read.csv("ver_data_lap_2021_ad_44.csv")
p1 <- ggplot(data = ver_ad_2021_lap44, aes(x = Distance, y = Speed, color = "Max Verstappen Lap 44")) +
geom_line() +
geom_line(data = ham_ad_2021_lap44, aes(x = Distance, y = Speed, color = "Lewis Hamilton Lap 44")) +
labs(y = "Speed(km/h)", x = "Distance(in meters)") +
scale_color_manual(values = c("darkred", "steelblue"),
name = "Max Verstappen Vs Lewis Hamilton",
breaks = c("Max Verstappen Lap 44", "Lewis Hamilton Lap 44"),
labels = c("Lap 44", "Lap 44"))
p2 <- ggplot(data = ver_ad_2021_lap44, aes(x = Distance, y = Throttle, color = "Max Verstappen Lap 44")) +
geom_line() +
geom_line(data = ham_ad_2021_lap44, aes(x = Distance, y = Throttle, color = "Lewis Hamilton Lap 44")) +
labs(y = "Throttle(%)", x = "Distance(in meters)") +
scale_color_manual(values = c("darkred", "steelblue"),
name = "Max Verstappen vs Lewis Hamilton",
breaks = c("Max Verstappen Lap 44", "Lewis Hamilton Lap 44"),
labels = c("Lap 44", "Lap 44")) +
guides(color = guide_legend(override.aes = list(title = "Max Verstappen vs Lewis Hamilton")))
p3 <- ggplot(data = ver_ad_2021_lap44, aes(x = Distance, y = Brake, color = "Max Verstappen Lap 44")) +
geom_line() +
geom_line(data = ham_ad_2021_lap44, aes(x = Distance, y = Brake, color = "Lewis Hamilton Lap 44")) +
labs(y = "Brake", x = "Distance(in meters)") +
scale_color_manual(values = c("darkred", "steelblue"),
name = "Max Verstappen vs Lewis Hamilton",
breaks = c("Max Verstappen Lap 44", "Lewis Hamilton Lap 44"),
labels = c("Lap 44", "Lap 44")) +
guides(color = guide_legend(override.aes = list(title = "Max Verstappen vs Lewis Hamilton")))
p4 <- ggplot(data = ver_ad_2021_lap44, aes(x = Distance, y = nGear, color = "Max Verstappen Lap 44")) +
geom_line() +
geom_line(data = ham_ad_2021_lap44, aes(x = Distance, y = nGear, color = "Lewis Hamilton Lap 44")) +
labs(y = "Gear Number", x = "Distance(in meters)") +
scale_color_manual(values = c("darkred", "steelblue"),
name = "Max Verstappen vs Lewis Hamilton",
breaks = c("Max Verstappen Lap 44", "Lewis Hamilton Lap 44"),
labels = c("Lap 44", "Lap 44")) +
guides(color = guide_legend(override.aes = list(title = "Max Verstappen vs Lewis Hamilton")))
p5 <- ggplot(data = ver_ad_2021_lap44, aes(x = Distance, y = RPM, color = "Max Verstappen Lap 44")) +
geom_line() +
geom_line(data = ham_ad_2021_lap44, aes(x = Distance, y = RPM, color = "Lewis Hamilton Lap 44")) +
labs(y = "RPM", x = "Distance(in meters)") +
scale_color_manual(values = c("darkred", "steelblue"),
name = "Max Verstappen vs Lewis Hamilton",
breaks = c("Max Verstappen Lap 44", "Lewis Hamilton Lap 44"),
labels = c("Lap 44", "Lap 44")) +
guides(color = guide_legend(override.aes = list(title = "Max Verstappen vs Lewis Hamilton")))
grid.arrange(p1, p2, p3, p4, p5 ,ncol = 1, nrow = 5)
